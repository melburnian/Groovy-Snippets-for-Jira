import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.attachment.Attachment
import com.atlassian.jira.project.Project
import com.atlassian.jira.security.PermissionManager
import com.atlassian.jira.security.Permissions
import com.atlassian.jira.security.type.SecurityType
import com.atlassian.jira.util.csv.CSVWriter
import org.apache.commons.csv.CSVFormat
import java.io.ByteArrayOutputStream
import java.nio.charset.StandardCharsets

// Replace PROJECT_KEY with the key of the project you want to extract the permissions for
// Replace ISSUE_KEY with the key of the issue that you want to attach the CSV file to
def projectKey = "PROJECT_KEY"
def issueKey = "ISSUE_KEY"

// Get the project object for the specified project key
def project = ComponentAccessor.getProjectManager().getProjectByCurrentKey(projectKey)

// Get the issue object for the specified issue key
def issue = ComponentAccessor.getIssueManager().getIssueByCurrentKey(issueKey)

// Get the permission manager
def permissionManager = ComponentAccessor.getPermissionManager()

// Create a list to store the permissions data
def permissionsData = []

// Iterate over all of the security types for the project
for (SecurityType securityType : permissionManager.getAllSecurityTypes()) {
    // Get the permissions for the current security type
    def permissions = permissionManager.getPermissions(securityType, project)

    // Iterate over the permissions
    for (Permissions permission : permissions) {
        // Create a map to store the data for the current permission
        def permissionData = [:]

        // Add the security type, permission name, and group/role name to the map
        permissionData['Security Type'] = securityType.getName()
        permissionData['Permission'] = permission.getName()
        permissionData['Group/Role'] = permission.getGroup().getName()

        // Add the permission data to the list
        permissionsData << permissionData
    }
}

// Create the CSV writer
def csvWriter = new CSVWriter(CSVFormat.DEFAULT)

// Write the header row
csvWriter.writeNext(['Security Type', 'Permission', 'Group/Role'])

// Write the data rows
permissionsData.each { permissionData ->
    csvWriter.writeNext([permissionData['Security Type'], permissionData['Permission'], permissionData['Group/Role']])
}

// Close the CSV writer
csvWriter.close()

// Get the CSV data as a string
def csvData = csvWriter.toString()

// Create a new attachment object
def attachment = new Attachment()

// Set the attachment properties
attachment.setContentType("text/csv")
attachment.setFilename("permissions.csv")
attachment.setContent(csvData.getBytes(StandardCharsets.UTF_8))

// Save the attachment
attachment = ComponentAccessor.getAttachmentManager().createAttachment(attachment, issue)

// Print a message indicating that the attachment has been added to the issue
println("Attachment added to issue ${issue.key}")

